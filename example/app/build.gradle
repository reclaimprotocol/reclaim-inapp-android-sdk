plugins {
    alias(libs.plugins.android.application)
    alias(libs.plugins.kotlin.android)
    alias(libs.plugins.kotlin.compose)
}

def localProperties = new Properties()
def localPropertiesFile = rootProject.file("local.properties")
if (localPropertiesFile.exists()) {
    localPropertiesFile.withReader("UTF-8") { reader ->
        localProperties.load(reader)
    }
}
def reclaimSdkAppId = System.env.RECLAIM_SDK_APP_ID ?: localProperties.getProperty('reclaimSdk.appId')
def reclaimSdkAppSecret = System.env.RECLAIM_SDK_APP_SECRET ?: localProperties.getProperty('reclaimSdk.appSecret')

android {
    namespace 'org.reclaimprotocol.inapp_sdk_example'
    compileSdk 35

    defaultConfig {
        applicationId "org.reclaimprotocol.inapp_sdk_example"
        minSdk 21
        targetSdk 35
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'

            if (reclaimSdkAppId != null) {
                resValue "string", "RECLAIM_SDK_APP_ID", reclaimSdkAppId
            }
            if (reclaimSdkAppSecret != null) {
                resValue "string", "RECLAIM_SDK_APP_SECRET", reclaimSdkAppSecret
            }

            signingConfig = signingConfigs.debug
        }
        debug {
            if (reclaimSdkAppId != null) {
                resValue "string", "RECLAIM_SDK_APP_ID", reclaimSdkAppId
            }
            if (reclaimSdkAppSecret != null) {
                resValue "string", "RECLAIM_SDK_APP_SECRET", reclaimSdkAppSecret
            }
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_11
        targetCompatibility JavaVersion.VERSION_11
    }
    kotlinOptions {
        jvmTarget = '11'
    }
    buildFeatures {
        compose true
    }
}

// You could add the following configuration in your build.gradle file in order to ensure Gradle always picks up the ‘freshest’ version of the build when using SNAPSHOT:
configurations.all {
    resolutionStrategy.cacheChangingModulesFor 0, 'seconds'
}

dependencies {

    implementation libs.androidx.core.ktx
    implementation libs.androidx.lifecycle.runtime.ktx
    implementation libs.androidx.activity.compose
    implementation platform(libs.androidx.compose.bom)
    implementation libs.androidx.ui
    implementation libs.androidx.ui.graphics
    implementation libs.androidx.ui.tooling.preview
    implementation libs.androidx.material3
    testImplementation libs.junit
    androidTestImplementation libs.androidx.junit
    androidTestImplementation libs.androidx.espresso.core
    androidTestImplementation platform(libs.androidx.compose.bom)
    androidTestImplementation libs.androidx.ui.test.junit4
    debugImplementation libs.androidx.ui.tooling
    debugImplementation libs.androidx.ui.test.manifest

    //noinspection UseTomlInstead
    implementation "org.reclaimprotocol:inapp_sdk:0.10.7"
}